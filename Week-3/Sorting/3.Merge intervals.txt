class Solution {
    public int[][] merge(int[][] intervals) 
    {
        int count=0;
        int[] a1=new int[intervals.length];
        int[] a2=new int[intervals.length];
        for(int i=0;i<a1.length;i++)
        {
            a1[i]=intervals[i][0];
            a2[i]=intervals[i][1];
        }
        for(int i=0;i<a1.length-1;i++)
        {
            for(int j=i+1;j<a1.length;j++)
            {
                if(a1[i]>a1[j])
                { 
                    a1[i]=(a1[j]+a1[i])-(a1[j]=a1[i]);
                    a2[i]=(a2[j]+a2[i])-(a2[j]=a2[i]);
                }
            }
        }
    
        for(int i=0;i<a1.length-1;i++)
        {
            if(a2[i]>=a1[i+1] && a2[i]<=a2[i+1])
            {
                a2[i]=-1;
                a1[i+1]=a1[i];
                a1[i]=-1;
                count++;
            }
             if(a2[i]>=a1[i+1] && a2[i]>a2[i+1])
            {
                a2[i+1]=a2[i];
                a1[i+1]=a1[i];
                 a2[i]=-1;
                 a1[i]=-1;
                count++;
            }
        }
        if(count==0)
            return intervals;
        int[] b1=new int[a1.length-count];
        int[] b2=new int[a1.length-count];
        int k=0,l=0;
        for(int i=0;i<a1.length;i++)
        {
            if(a1[i]!=-1)
            {
                b1[k]=a1[i];k++;
            }
            if(a2[i]!=-1)
            {
                b2[l]=a2[i];l++;
            }
        }
        int[][] fin=new int[b1.length][2];
        for(int i=0;i<b1.length;i++)
        {
            fin[i][0]=b1[i];
            fin[i][1]=b2[i];
        }
        return fin;
    }
}